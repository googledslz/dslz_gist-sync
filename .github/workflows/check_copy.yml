name: Smart Sync Gist to tmp/pc.yaml

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  smart-update-gist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Show trigger source
        run: |
          echo "=== Workflow triggered by: ${{ github.event_name }} ==="
          echo "=== Current UTC time ==="
          date -u
          echo "=== Current Beijing time ==="
          TZ='Asia/Shanghai' date

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install requests pyyaml

      - name: Merge Gist to tmp/pc.yaml
        run: |
          import os, requests, yaml, pathlib, hashlib

          gist_user = os.environ["GIST_USER"]
          gist_id = os.environ["GIST_ID"]

          base_url = f"https://gist.githubusercontent.com/{gist_user}/{gist_id}/raw"
          zhu_he_url = f"{base_url}/ZHU_HE"
          fu_xie_a_url = f"{base_url}/fu_xie_A"

          zhu_he_content = requests.get(zhu_he_url).text
          fu_xie_a_content = requests.get(fu_xie_a_url).text

          # 处理 proxies 重复 name
          try:
              data = yaml.safe_load(zhu_he_content)
          except Exception:
              print("⚠️ ZHU_HE 内容不是有效 YAML，跳过 proxies 重命名")
              data = {}

          if "proxies" in data:
              proxies = data["proxies"]
              seen = {}
              for proxy in proxies:
                  base_name = proxy.get("name", "")
                  if base_name not in seen:
                      seen[base_name] = 1
                  else:
                      count = seen[base_name]
                      new_name = f"{base_name}-{count}"
                      while new_name in seen:
                          count += 1
                          new_name = f"{base_name}-{count}"
                      proxy["name"] = new_name
                      seen[base_name] += 1
                      seen[new_name] = 1
              data["proxies"] = proxies

          zhu_he_content_fixed = yaml.dump(data, allow_unicode=True)

          # 合并 ZHU_HE 和 fu_xie_A
          merged_content = zhu_he_content_fixed + "\n" + fu_xie_a_content

          # 确保 tmp 目录存在
          tmp_dir = pathlib.Path("tmp")
          tmp_dir.mkdir(exist_ok=True)

          # tmp/pc.yaml 路径
          pc_path = tmp_dir / "pc.yaml"

          # 读取已有内容（如果存在），仅在内容变化时更新
          old_content = ""
          if pc_path.exists():
              old_content = pc_path.read_text(encoding="utf-8")

          if hashlib.md5(merged_content.encode("utf-8")).hexdigest() != hashlib.md5(old_content.encode("utf-8")).hexdigest():
              with open(pc_path, "w", encoding="utf-8") as f:
                  f.write(merged_content)
              print(f"🔄 tmp/pc.yaml 内容变化，已更新")
          else:
              print("✅ tmp/pc.yaml 内容未变化，跳过写入")
        shell: python

      - name: Commit tmp/pc.yaml to repo if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add tmp/pc.yaml
          # 仅在有变化时 commit
          git diff --cached --quiet || git commit -m "Update tmp/pc.yaml from Gist [${{ github.event_name }}]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    env:
      GIST_ID: ${{ secrets.GIST_ID }}
      GIST_USER: ${{ secrets.GIST_USER }}
